name: Master

on:
  push:
    branches:
      - master
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    name: CI / ${{ matrix.architecture.name }}
    runs-on: ${{ matrix.architecture.runner }}
    strategy:
      matrix:
        architecture:
          - name: "ARM64"
            runner: "ubuntu-24.04-arm"
          - name: "AMD64"
            runner: "ubuntu-24.04"
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target:
          override: true
          components: rustfmt, clippy

      - name: Formatting check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace -- -D warnings

      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-fail-fast

  docker-image-build:
    name: Docker Image Build
    needs:
      - ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=edge
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  binary-build:
    name: Binary Build / ${{ matrix.platform.os-name }}
    needs:
      - ci
    strategy:
      matrix:
        platform:
          - os-name: FreeBSD-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-freebsd

          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os-name: Linux-riscv64
            runs-on: ubuntu-24.04
            target: riscv64gc-unknown-linux-gnu
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          target: ${{ matrix.platform.target }}
          args: "--locked --release"

      - uses: actions/upload-artifact@v4
        with:
          name: roselite-${{ matrix.platform.os-name }}-${{ matrix.platform.target }}
          path: target/release/roselite
