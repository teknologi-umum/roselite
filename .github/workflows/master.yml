name: Master

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  ci:
    name: CI / ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.runner }}
    strategy:
      matrix:
        os:
          - name: "Linux amd64"
            runner: "ubuntu-24.04"
            binary_name: "roselite-linux-amd64"
          - name: "Linux arm64"
            runner: "ubuntu-24.04-arm"
            binary_name: "roselite-linux-arm64"
          - name: "MacOS"
            runner: "macos-latest"
            binary_name: "roselite-darwin"
          - name: "Windows"
            runner: "windows-latest"
            binary_name: "roselite-windows-x64.exe"
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build
        run: go build -buildvcs=false -o ${{ matrix.os.binary_name }} -ldflags="-X 'main.version=$(git describe --tags --always)'" ./cmd/

      - name: Test
        run: go test -v -coverprofile='coverage.out' -covermode=atomic ./...

      - uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          files: ./coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload binary to GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os.binary_name }}
          path: ${{ matrix.os.binary_name }}

  docker-image-build:
    name: Docker Image Build
    needs:
      - ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=edge
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

# TODO: Additional binary build for:
#       - FreeBSD x86_64
#       - RISC-V 64
